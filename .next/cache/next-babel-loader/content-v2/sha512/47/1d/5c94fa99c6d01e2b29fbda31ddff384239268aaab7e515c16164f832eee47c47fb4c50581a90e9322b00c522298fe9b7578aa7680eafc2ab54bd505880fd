{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Priya\\\\doc_Priya\\\\Projects\\\\NextJs\\\\transport_provider\\\\pages\\\\[providerId]\\\\index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport TransportProviderDetail from '../../components/transports/TransportProviderDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.TransportData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransportProviderDetail, {\n      address: props.TransportData.address,\n      description: props.TransportData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Priya/doc_Priya/Projects/NextJs/transport_provider/pages/[providerId]/index.js"],"names":["Fragment","Head","TransportProviderDetail","MeetupDetails","props","TransportData","description","address"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,uBAAP,MAAoC,qDAApC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEA,KAAK,CAACC,aAAN,CAAoBC;AAAtD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,uBAAD;AACE,MAAA,OAAO,EAAEF,KAAK,CAACC,aAAN,CAAoBE,OAD/B;AAEE,MAAA,WAAW,EAAEH,KAAK,CAACC,aAAN,CAAoBC;AAFnC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAbQH,a;;AAsET,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\nimport { Fragment } from 'react';\nimport Head from 'next/head';\n\nimport TransportProviderDetail from '../../components/transports/TransportProviderDetail';\n\nfunction MeetupDetails(props) {\n  return (\n    <Fragment>\n      <Head>\n        {/* <title>{props.meetupData.title}</title> */}\n        <meta name='description' content={props.TransportData.description} />\n      </Head>\n      <TransportProviderDetail\n        address={props.TransportData.address}\n        description={props.TransportData.description}\n      />\n    </Fragment>\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    'mongodb+srv://priya:8WkZP0UN2RgWgGNW@cluster0.cgwklk9.mongodb.net/transportprovider?retryWrites=true&w=majority'\n  );\n  const db = client.db();\n\n  const transportproviderCollection = db.collection('transportprovider');\n\n  const transports = await transportproviderCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: 'blocking',\n    paths: transports.map((trans) => ({\n      params: { providerId: trans._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n\n  const providerId = context.params.providerId;\n\n  const client = await MongoClient.connect(\n    'mongodb+srv://priya:8WkZP0UN2RgWgGNW@cluster0.cgwklk9.mongodb.net/transportprovider?retryWrites=true&w=majority'\n  );\n  const db = client.db();\n\n  const transportproviderCollection = db.collection('transportprovider');\n\n  const selectedProvider = await transportproviderCollection.findOne({\n    _id: ObjectId(providerId),\n  });\n\n  client.close();\n\n  return {\n    props: {\n      TransportData: {\n          id: selectedProvider._id.toString(),\n          owner_name: selectedProvider.owner_name,\n          vehicle_no: selectedProvider.vehicle_no,\n          driver_name: selectedProvider.driver_name,\n          phone_no: selectedProvider.phone_no,\n          licence_no: selectedProvider.licence_no,\n          service_type: selectedProvider.service_type,\n          address: selectedProvider.address,\n          description: selectedProvider.description,\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}