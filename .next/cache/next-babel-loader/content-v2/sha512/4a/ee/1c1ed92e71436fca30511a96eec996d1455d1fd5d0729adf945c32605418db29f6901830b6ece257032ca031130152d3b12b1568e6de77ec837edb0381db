{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Priya\\\\doc_Priya\\\\Projects\\\\NextJs\\\\transport_provider\\\\pages\\\\index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient } from 'mongodb';\nimport TransportProviderList from '../components/meetups/TransportProviderList';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active React meetups!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransportProviderList, {\n      transports: props.transports\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect('mongodb+srv://priya:8WkZP0UN2RgWgGNW@cluster0.cgwklk9.mongodb.net/transportprovider?retryWrites=true&w=majority');\n  const db = client.db();\n  const transportproviderCollection = db.collection('transportprovider');\n  const transports = await transportproviderCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      transports: transports.map(trans => ({\n        id: trans._id.toString(),\n        owner_name: trans.owner_name,\n        vehicle_no: trans.vehicle_no,\n        driver_name: trans.driver_name,\n        phone_no: trans.phone_no,\n        licence_no: trans.licence_no,\n        service_type: trans.service_type,\n        address: trans.address,\n        description: trans.description\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Priya/doc_Priya/Projects/NextJs/transport_provider/pages/index.js"],"names":["Fragment","Head","MongoClient","TransportProviderList","HomePage","props","transports","getStaticProps","client","connect","db","transportproviderCollection","collection","find","toArray","close","map","trans","id","_id","toString","owner_name","vehicle_no","driver_name","phone_no","licence_no","service_type","address","description","revalidate"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAOC,qBAAP,MAAkC,6CAAlC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,qBAAD;AAAuB,MAAA,UAAU,EAAEA,KAAK,CAACC;AAAzC;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAEnB,iHAFmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,2BAA2B,GAAGD,EAAE,CAACE,UAAH,CAAc,mBAAd,CAApC;AAEA,QAAMN,UAAU,GAAG,MAAMK,2BAA2B,CAACE,IAA5B,GAAmCC,OAAnC,EAAzB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEA,UAAU,CAACU,GAAX,CAAgBC,KAAD,KAAY;AACtCC,QAAAA,EAAE,EAAED,KAAK,CAACE,GAAN,CAAUC,QAAV,EADkC;AAErCC,QAAAA,UAAU,EAAEJ,KAAK,CAACI,UAFmB;AAGrCC,QAAAA,UAAU,EAAEL,KAAK,CAACK,UAHmB;AAIrCC,QAAAA,WAAW,EAAEN,KAAK,CAACM,WAJkB;AAKrCC,QAAAA,QAAQ,EAAEP,KAAK,CAACO,QALqB;AAMrCC,QAAAA,UAAU,EAAER,KAAK,CAACQ,UANmB;AAOrCC,QAAAA,YAAY,EAAET,KAAK,CAACS,YAPiB;AAQrCC,QAAAA,OAAO,EAAEV,KAAK,CAACU,OARsB;AASrCC,QAAAA,WAAW,EAAEX,KAAK,CAACW;AATkB,OAAZ,CAAf;AADP,KADF;AAcLC,IAAAA,UAAU,EAAE;AAdP,GAAP;AAgBD;AAED,eAAezB,QAAf","sourcesContent":["import { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient } from 'mongodb';\n\nimport TransportProviderList from '../components/meetups/TransportProviderList';\n\nfunction HomePage(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title>React Meetups</title>\n        <meta\n          name='description'\n          content='Browse a huge list of highly active React meetups!'\n        />\n      </Head>\n      \n      <TransportProviderList transports={props.transports} />;\n    </Fragment>\n  );\n}\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n  \n    'mongodb+srv://priya:8WkZP0UN2RgWgGNW@cluster0.cgwklk9.mongodb.net/transportprovider?retryWrites=true&w=majority'\n  );\n  const db = client.db();\n\n  const transportproviderCollection = db.collection('transportprovider');\n\n  const transports = await transportproviderCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      transports: transports.map((trans) => ({\n       id: trans._id.toString(),\n        owner_name: trans.owner_name,\n        vehicle_no: trans.vehicle_no,\n        driver_name: trans.driver_name,\n        phone_no: trans.phone_no,\n        licence_no: trans.licence_no,\n        service_type: trans.service_type,\n        address: trans.address,\n        description: trans.description,\n      })),\n    },\n    revalidate: 1,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}