{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Priya\\\\doc_Priya\\\\Projects\\\\NextJs\\\\transport_provider\\\\pages\\\\index.js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active React meetups!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), props.transports[0].address]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   };\n// }\n\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect('mongodb+srv://priya:8WkZP0UN2RgWgGNW@cluster0.cgwklk9.mongodb.net/transportprovider?retryWrites=true&w=majority');\n  const db = client.db();\n  const transportproviderCollection = db.collection('transportprovider');\n  const transports = await transportproviderCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      transports: transports.map(trans => ({\n        title: trans.address // address: meetup.address,\n        // image: meetup.image,\n        // id: meetup._id.toString(),\n\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Priya/doc_Priya/Projects/NextJs/transport_provider/pages/index.js"],"names":["Fragment","Head","MongoClient","MeetupList","HomePage","props","transports","address","getStaticProps","client","connect","db","transportproviderCollection","collection","find","toArray","close","map","trans","title","revalidate"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQGA,KAAK,CAACC,UAAN,CAAiB,CAAjB,EAAoBC,OARvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,C,CAED;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAEnB,iHAFmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,2BAA2B,GAAGD,EAAE,CAACE,UAAH,CAAc,mBAAd,CAApC;AAEA,QAAMP,UAAU,GAAG,MAAMM,2BAA2B,CAACE,IAA5B,GAAmCC,OAAnC,EAAzB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEA,UAAU,CAACW,GAAX,CAAgBC,KAAD,KAAY;AACrCC,QAAAA,KAAK,EAAED,KAAK,CAACX,OADwB,CAErC;AACA;AACA;;AAJqC,OAAZ,CAAf;AADP,KADF;AASLa,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD;AAED,eAAehB,QAAf","sourcesContent":["import { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient } from 'mongodb';\n\nimport MeetupList from '../components/meetups/MeetupList';\n\nfunction HomePage(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title>React Meetups</title>\n        <meta\n          name='description'\n          content='Browse a huge list of highly active React meetups!'\n        />\n      </Head>\n      {props.transports[0].address}\n      {/* <MeetupList meetups={props.meetups} />; */}\n    </Fragment>\n  );\n}\n\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n\n//   // fetch data from an API\n\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   };\n// }\n\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n  \n    'mongodb+srv://priya:8WkZP0UN2RgWgGNW@cluster0.cgwklk9.mongodb.net/transportprovider?retryWrites=true&w=majority'\n  );\n  const db = client.db();\n\n  const transportproviderCollection = db.collection('transportprovider');\n\n  const transports = await transportproviderCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      transports: transports.map((trans) => ({\n        title: trans.address,\n        // address: meetup.address,\n        // image: meetup.image,\n        // id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 1,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}